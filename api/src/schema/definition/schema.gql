scalar IntDict
scalar StringDict

type Query {
  getRoom(
    id: ID
    tag: String
  ): Room

  getUser(
    id: ID!
  ): User
}

type Mutation {
  makeRoom(
    tag: String!
  ): Room

  createUser(
    input: UserInput
  ): User

  updateUser(
    id: ID!
    input: UserInput!
  ): User

  joinRoom(
    room_id: ID!,
    user_id: ID!
    user: UserInput!,
  ): Room
}

type User {
  id: ID!
  name: String
  color: String
}

input UserInput {
  name: String
  color: String
}

type Definition {
  id: ID!
  author: ID
  text: String
  voters: [ID!]!
}

enum WordStatus {
  NONE
}

type Word {
  id: ID!
  text: String
  author: ID
  comittee: [ID!]!
  definitions: [Definition!]!
  status: WordStatus
}

type Room {
  id: ID!
  tag: String
  players: [User!]!
  words: [Word!]!
  scores: IntDict!
  colors: StringDict!
}

input RoomInput {
  tag: String
}
